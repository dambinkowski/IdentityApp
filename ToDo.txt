#       TO DO        # 

+ test if django is running 
+ add apps to settngis 
+ structure url 
+ create url files 
+ home page, url, view, html 
+ make migrations to add apps 


+ API 
+ profile identity variants 

+ request send 
+ create method 
valiadet data 
{'receiver': {'username': 'Michael'}, 'request_reasoning': 'how you doin'}
i need to access username to put it to creation 
okay with update had to go back, and create extra field
because I don't want to be able to update receiver becaues then that would relate 
to links etc. 
now serializer is different 
okay i give up I am gonna use generic view for this part
there is so much logic that might as well 
redoing keep viewsets for profile identity variants 
but for requests I am going to explicitly set 
+ request / send / get list - post new 
+ request / send / {pk} / - get detials, put update delete 
- add list of request identity variants 
because of separation between sender and receiver
i can make serializer with link for sender to be read only for safety 

+ request / send / {pk} / 
- update method 
uperantly using roture i need 
- request received
i want to add documentiatno since I am moving away from 
roture, I liked how links were shown, so I want to see 
documentiation, I was going to use swagger because it sometihng I was learnig 
at the coures, but then when reading OpenAPI documentiatno,  I 
checked django documentiatn for documenting api 
https://www.django-rest-framework.org/topics/documenting-your-api/
and I found recomandation for drf-spectacular so I am gonnat try that 
pip install drf-spectacular 
https://drf-spectacular.readthedocs.io/en/latest/readme.html

i was about to start web but then decided to create tests 
so when something doesnt work on website i know its not the 
backend issue 

when doing tests, i craetd user in setup, then i craete test case 
for sucselful registration, and i couldnt' understand why i am keep getitng error
manually it works, then i use print method for error msg to realzie that 
user already exits in setup because username has to be unique 

i spend so much time already writing tests, i had more errors writing tests wrong then
the app i was thinknig if there is some automatic testing 
i found schematics but then I realize, tests i wanted to make
are very specific, user action or app logic specific 
what is the input and what the result should be 
so I went back to writing them myself... 


okay making tests 
i realized that often is 404 for not found instead of unathoridez of forbidden, becasuse 
I use safety by not allowing user to ever be able to write a sender as input when creating the request 
or accesing request where sender 
I realzied my issue was that it return empty set 
deep dive into why is it empty set [] 200ok, then reading how it runs global permissions not object permission 
then i decided to leave it 

so i discovered has_object_permission only runs on Retrive/Update/Destroy, 
I thought when I am setting permission on the object any action with this object only permission allows to ever view it 
but list does not work like that, it does only check global has_permission, so to protect the view, 
filter what query set should return, and only filter data will show, so if user is trying 
to find something using pk, and I add filetr, that user has to be X it will return 404, because 
there is no match for that, but its not there is something like that but you don't have access to it 
I wonder if i should do explicit, user gave this pk for request,
its different then I first assumed but I guess it does make sense, I did start to research how to make 
forbidden, by adding some logic, then decided to stick to default, jus tests are going to be different with 
no found , or empty set, but again as long as data is invisible, and it has approach that 
- its not:  server has the resource you don't have access to it 
its 
- not of the resource that you have access too has those parameters 

as i was working on tests, i realized, i never run the feature of linking the profile identity with request
i did it in admin page, and then it showed it request send 
while doing tests i realze i keep getting error, first i thought its because the fields is read onlyt
then i realzied its the issue with permisssions again because the nested object has no .receiver atribute 
so permission class in trying to check permission 
so I need to etither write new permission class for the nested object or in main permission add logic 

of course I had to name one of the models - request - now it makes it confusing with django built in request 
i realized that it also shouldnt work in send because i used the same approach, 
then realized i didnt test for that and indeed it does not work
so i need to rebuild security system, add test for request sends, and finish request recevie identity varianst 

so basically i can not run has permission - to detrmine if its sender or receiver becuase that parts 
of DRF runs before even trying to get any obects, now if that passes, object is return and now 
I can check permision between object and a user, because drf has run the query, got the object and
has object info, that info now contains who is sender and who is receiver, 

okay great, now I have permission on the object, but i have request-identity-variant, where parent is 
request, os request-identity-variant does not users information of who is sender or receiver, 
because that info is in the request model, but update/retrive/destroy in the view still uses 
get_query_set so if user where to get details for that item, or update it 
it just wouldn't be fount because its not accessible, question is 
should i make it explicit or not 

so now I am used to checking hasattr because its what i need when I gave custom attributes in project before 
but also there has to be more readible way what if 2 objects have same attribute etc. so I just used 
python isInstance, to see what object is, if its Request check request.sender with request.user 
if its RequestIdentityVariant get RequestIdentityVariant.Request.sender 

i got to the point i have over 64 tests, and it takes 18 seconds to run it 
i like to make comments of what tests i need to do before coding, so I realzied i still have 
over at least 20 tests to do, I am not gona wait as I code, i remember from class i can specify which test i want to run
but typing it in is long so 
so did quick research how to make bash command that I can just add parametr which will be test name 

maybe test driven development is good, i coppied and pasted permisisons from request, and of course i change to
compere with status.ACCEPTED not with user to be receiver, but i did'nt change left side, so I was compering 
using tests i noticed this comes back false when it should be true, 

next functionaliny is tthat when user changes their mind and decides to deny request, their data should not be shared anymore
so I was going to loop over requestidentityvariants of request and wipe the links out, but then I was thinking if i woudl make query 
call for each instance, in Express i was trying to make as little queries as posible and I would have such an action in one query 
so I looked and Django does have bulk update which is much more scallable 

deciding on next step still going back and forth with doing react 
https://www.contentful.com/blog/htmx-react-use-cases/
I have the api tested and secured, so I don't want to rewrite the logic, and testing and security for the views 
but on the other hand react seems like unnesesesry since most logic is in the server side, and there is 
no significant optimization to have it moved 

okay already running into issues with allauth, i cant find the url patterns names -.- 

reading all auth documentiation, I like they safety aproach that can not check if email hass acount 

silly bug 
i took hours trouble shooting why is my all-auth login page not showing, 
i didn't set up profile/dashboard page becauese i did read documentiation 
and it shoudl work right out of the box the signup and login page 
so I took such a long time making sure everything is installed, 
digged deep int example project from documentaion, and just went with 
basic instalation example and it still did'nt work 
then i realize that the silly mistake was that user was already logged in 
because i was testing browsable api, and since I enabled django sessions for that 
authentication of course stayed for web requests...
so the reason it was not working its because it was redirecting to profile ( i customized it to dashobard later)
hours of why is rediracting happening.... 
anyways logged out using api, and there it was signup up page and login page worked like they supposed to 
then I created dashboard page, made it login requeire mixin and once login through allouth redirec there
in prototype i used funtion based views, but since i want to use inharitance for classes, 
and take advantage of object oriented programiming i change to class view even for dashboard 

my next step is to continue making web page endpoints 
i will stay focused and not do any css until every functionality is done 

i am gonig to make website endiponits identical or very similar to api endponits 

okay so I thought i can just set up reponse to be html renderere, and I will be good to go 
but I also need to overide get response to change it from json to dict for template to 
be able to get data 

next issue was i see data data[0].key but apperantly its data.0.key becaues its python dictionaries 

so glad i defined urls as variabless in setup so it was easy to change name for urls adding api in front, so web can use without api 

okay this is not saving time, trying to make html form with errors is not easy 
DRF is not made for this, so switch of plans, I am gonig to use django, and create permissions again, i think i will be faster doing that
then read bunch of DRF documentaitnos trying to make things work, django templetes were made to handle those html actions 
so that is a big switch 

lets go 
\
i was thking to do permissions.py file again 

normalyl i would just hard code the url, but then i came across reverse lazy in one of django tutorials, 
so i did reasrceha in documention, and its the way its common practice to use url name 
so if i ever need to change path, i don't need to change hardcoded values, because its all connected to name 

i am making views one by one, keeping them separated, i am tired to make one fit all for purpose of basic funcionaly 
now django is really helpfuul, i am maknig view, and then I get visible errror that i didn't set get queryset or 
that after edditg using generic update view, I need sucselful url where app should go 
so developing with django is great 

